// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
	IN in[16], load, address[14];
	OUT out[16];

	PARTS:
	// Put your code here:
	DMux4Way(in = load, sel = address[12..13], a = w1, b = w2, c = w3, d = w4);
	RAM4K(in = in, load = w1, address = address[0..11], out = wa);
	RAM4K(in = in, load = w2, address = address[0..11], out = wb);
	RAM4K(in = in, load = w3, address = address[0..11], out = wc);
	RAM4K(in = in, load = w4, address = address[0..11], out = wd);
	Mux4Way16(a = wa, b = wb, c = wc, d = wd, sel = address[12..13], out = out);
}